// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  folderIds Int[] 
  Folders Folder[] @relation("ownedByUser")
  fileIds Int[]
  files File[] @relation("fileOwnedByUser")
  totalStored Int @default(0)
  sharedFolderId Int @unique
  sharedFolder SharedFolder @relation("sharedWithMe", fields: [sharedFolderId], references: [id])
  starredFolderId Int @unique
  starredFolder StarredFolder @relation("starredOwner", fields: [starredFolderId], references: [id])
}


model Folder {
  id Int @id @default(autoincrement())
  name String
  drive Boolean @default(false)
  createdAt DateTime @default(now())
  starred Boolean @default(false)
  lastModified DateTime @default(now())
  lastAccessed DateTime @default(now())
  ownerId Int
  owner User @relation("ownedByUser", fields: [ownerId], references: [id], onDelete: Cascade)
  parentId Int?
  parentFolder Folder? @relation("ChildFolder", fields: [parentId], references: [id], onDelete:  Cascade)
  childrenFolders Folder[] @relation("ChildFolder")
  files File[] @relation("fileParent")
  sharedFolders SharedFolder[] 
  starredParentId Int? 
  starredParentFolder StarredFolder? @relation("starredParentOfFolder", fields: [starredParentId], references: [id])
}
model File {
  id Int @id @default(autoincrement())
  name String
  size Int
  extension String
  starred Boolean @default(false)
  createdAt DateTime @default(now())
  lastModified DateTime @default(now())
  lastAccessed DateTime @default(now())
  ownerId Int
  owner User @relation("fileOwnedByUser", fields: [ownerId], references: [id], onDelete: Cascade)
  parentId Int
  parentFolder Folder @relation("fileParent", fields: [parentId], references: [id], onDelete: Cascade)
  sharedFolders SharedFolder[]
  starredParentId Int? 
  starredParentFolder StarredFolder? @relation("starredParentOfFile", fields: [starredParentId], references: [id])
  publicId String
  resourceType String
}
model StarredFolder {
  id Int @id @default(autoincrement())
  owner User? @relation("starredOwner")
  childrenFolders Folder[] @relation("starredParentOfFolder")
  files File[] @relation("starredParentOfFile")
}
model SharedFolder {
  id Int @id @default(autoincrement())
  owner User? @relation("sharedWithMe")
  childrenFolders Folder[]
  files File[]
}